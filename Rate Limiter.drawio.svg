<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1216px" height="3050px" viewBox="-0.5 -0.5 1216 3050" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2024-06-07T08:16:40.056Z&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36&quot; etag=&quot;xoVPOIwUoFnUKumeLwtT&quot; version=&quot;24.5.1&quot; type=&quot;github&quot;&gt;&#10;  &lt;diagram name=&quot;Page-1&quot; id=&quot;gAbEhMCksTMWc2DahYPJ&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1242&quot; dy=&quot;820&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-3&quot; value=&quot;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, &amp;amp;quot;system-ui&amp;amp;quot;, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 10px; line-height: 26px; font-size: 15px; text-align: justify; color: rgb(33, 37, 41);&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; font-weight: bolder;&amp;quot;&amp;gt;Requirements&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, &amp;amp;quot;system-ui&amp;amp;quot;, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 10px; line-height: 26px; font-size: 15px; text-align: justify; color: rgb(33, 37, 41);&amp;quot;&amp;gt;Here is a summary of the requirements for the system:&amp;lt;/p&amp;gt;&amp;lt;ul style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, &amp;amp;quot;system-ui&amp;amp;quot;, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin: 0px 0px 16px 28px; list-style-position: initial; list-style-image: initial; padding: 0px; color: rgb(33, 37, 41); font-size: 14px; text-align: start;&amp;quot;&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Accurately limit excessive requests.&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Low latency. The rate limiter should not slow down HTTP response time.&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Use as little memory as possible.&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Distributed rate limiting. The rate limiter can be shared across multiple servers or processes.&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Exception handling. Show clear exceptions to users when their requests are throttled.&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;High fault tolerance. If there are any problems with the rate limiter (for example, a cache server goes offline), it does not affect the entire system.&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;30&quot; y=&quot;20&quot; width=&quot;860&quot; height=&quot;350&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-7&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;hCzg1qKYabfS8IIPQ2bj-5&quot; target=&quot;hCzg1qKYabfS8IIPQ2bj-6&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-5&quot; value=&quot;Client&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;110&quot; y=&quot;525&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-9&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;hCzg1qKYabfS8IIPQ2bj-6&quot; target=&quot;hCzg1qKYabfS8IIPQ2bj-8&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-6&quot; value=&quot;Rate Limiter&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;380&quot; y=&quot;525&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-8&quot; value=&quot;Server&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;630&quot; y=&quot;525&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-10&quot; value=&quot;1. Basic High level rate limiter is a service in the middle of client and server communication. We can use in-memory map to control request limit.&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;As it is in-memory model so it is cannot provide consistency(data lose when service goes down) and scalability (request is stored in-memory so can&amp;#39;t be scale)&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;250&quot; y=&quot;350&quot; width=&quot;420&quot; height=&quot;150&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-11&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;hCzg1qKYabfS8IIPQ2bj-12&quot; target=&quot;hCzg1qKYabfS8IIPQ2bj-14&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-12&quot; value=&quot;Client&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;130&quot; y=&quot;960&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-13&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;hCzg1qKYabfS8IIPQ2bj-14&quot; target=&quot;hCzg1qKYabfS8IIPQ2bj-15&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-14&quot; value=&quot;Rate Limiter&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;400&quot; y=&quot;960&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-15&quot; value=&quot;Server&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;650&quot; y=&quot;960&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-16&quot; value=&quot;2. Instead in-memory, we can use distributed redis in-memory support which provides high availability also through replication in multiple nodes.&amp;lt;div&amp;gt;This model suffice all given requirement.&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;70&quot; y=&quot;660&quot; width=&quot;420&quot; height=&quot;150&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-17&quot; value=&quot;Redis&quot; style=&quot;shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;430&quot; y=&quot;1115&quot; width=&quot;60&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-18&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.617;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;hCzg1qKYabfS8IIPQ2bj-14&quot; target=&quot;hCzg1qKYabfS8IIPQ2bj-17&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;460&quot; y=&quot;1095&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-21&quot; value=&quot;&amp;lt;div&amp;gt;Major concern arise how concurrent request will be handled in redis.&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;Redis provide feature of transaction. There are several ways we can acheive atomicity in redis.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;h3&amp;gt;1. &amp;lt;strong&amp;gt;Using Transactions&amp;lt;/strong&amp;gt;&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;Redis transactions allow you to execute a series of commands atomically using the &amp;lt;code&amp;gt;MULTI&amp;lt;/code&amp;gt;, &amp;lt;code&amp;gt;EXEC&amp;lt;/code&amp;gt;, and &amp;lt;code&amp;gt;WATCH&amp;lt;/code&amp;gt; commands.&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;MULTI/EXEC&amp;lt;/strong&amp;gt;: These commands mark the start and end of a transaction block. All commands between &amp;lt;code&amp;gt;MULTI&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;EXEC&amp;lt;/code&amp;gt; are queued and executed atomically.&amp;lt;/p&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;div class=&amp;quot;dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;overflow-y-auto p-4&amp;quot; dir=&amp;quot;ltr&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;!whitespace-pre hljs language-redis&amp;quot;&amp;gt;MULTI&amp;lt;br&amp;gt;SET key1 value1&amp;lt;br&amp;gt;SET key2 value2&amp;lt;br&amp;gt;EXEC&amp;lt;br&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;WATCH&amp;lt;/strong&amp;gt;: This command is used to monitor one or more keys. If any of the watched keys are modified before the transaction is executed, the transaction is aborted.&amp;lt;/p&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;div class=&amp;quot;dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;overflow-y-auto p-4&amp;quot; dir=&amp;quot;ltr&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;!whitespace-pre hljs language-redis&amp;quot;&amp;gt;WATCH key1 key2&amp;lt;br&amp;gt;MULTI&amp;lt;br&amp;gt;SET key1 newValue1&amp;lt;br&amp;gt;SET key2 newValue2&amp;lt;br&amp;gt;EXEC&amp;lt;br&amp;gt;UNWATCH&amp;lt;br&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h3&amp;gt;2. &amp;lt;strong&amp;gt;Using Lua Scripts&amp;lt;/strong&amp;gt;&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;Lua scripts in Redis are executed atomically, which ensures that no other commands are executed while the script is running. This can be particularly useful for complex operations.&amp;lt;/p&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;div class=&amp;quot;dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;overflow-y-auto p-4&amp;quot; dir=&amp;quot;ltr&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;!whitespace-pre hljs language-lua&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;local&amp;lt;/span&amp;gt; current = redis.call(&amp;lt;span class=&amp;quot;hljs-string&amp;quot;&amp;gt;&amp;quot;GET&amp;quot;&amp;lt;/span&amp;gt;, KEYS[&amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;])&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;if&amp;lt;/span&amp;gt; current == ARGV[&amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;] &amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;then&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;  &amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;return&amp;lt;/span&amp;gt; redis.call(&amp;lt;span class=&amp;quot;hljs-string&amp;quot;&amp;gt;&amp;quot;SET&amp;quot;&amp;lt;/span&amp;gt;, KEYS[&amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;1&amp;lt;/span&amp;gt;], ARGV[&amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;2&amp;lt;/span&amp;gt;])&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;else&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;  &amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;return&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-literal&amp;quot;&amp;gt;nil&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;end&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;p&amp;gt;You can execute this script using the &amp;lt;code&amp;gt;EVAL&amp;lt;/code&amp;gt; command:&amp;lt;/p&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;div class=&amp;quot;dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;overflow-y-auto p-4&amp;quot; dir=&amp;quot;ltr&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;!whitespace-pre hljs language-redis&amp;quot;&amp;gt;EVAL &amp;quot;local current = redis.call(&amp;#39;GET&amp;#39;, KEYS[1]); if current == ARGV[1] then return redis.call(&amp;#39;SET&amp;#39;, KEYS[1], ARGV[2]) else return nil end&amp;quot; 1 key currentValue newValue&amp;lt;br&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;h3&amp;gt;3. &amp;lt;strong&amp;gt;Optimistic Locking&amp;lt;/strong&amp;gt;&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;Optimistic locking involves checking the value of a key before modifying it, ensuring that it has not been changed by another client since it was last read. This can be implemented using &amp;lt;code&amp;gt;WATCH&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;div class=&amp;quot;dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;overflow-y-auto p-4&amp;quot; dir=&amp;quot;ltr&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;!whitespace-pre hljs language-redis&amp;quot;&amp;gt;WATCH key&amp;lt;br&amp;gt;local value = redis.call(&amp;quot;GET&amp;quot;, &amp;quot;key&amp;quot;)&amp;lt;br&amp;gt;if value == &amp;quot;expected_value&amp;quot; then&amp;lt;br&amp;gt;  MULTI&amp;lt;br&amp;gt;  SET key new_value&amp;lt;br&amp;gt;  EXEC&amp;lt;br&amp;gt;else&amp;lt;br&amp;gt;  UNWATCH&amp;lt;br&amp;gt;end&amp;lt;br&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;h3&amp;gt;4. &amp;lt;strong&amp;gt;Redlock Algorithm&amp;lt;/strong&amp;gt;&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;For distributed systems where Redis is used across multiple instances, the Redlock algorithm ensures distributed locking. This algorithm attempts to acquire locks on multiple Redis instances to achieve consensus.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Here is a simplified version of the Redlock algorithm:&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;Attempt to acquire the lock on a majority of Redis instances.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Set a short expiration time to prevent deadlocks.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Release the lock when the task is completed.&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;h3&amp;gt;5. &amp;lt;strong&amp;gt;Using Redisson&amp;lt;/strong&amp;gt;&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;Redisson is a Java-based Redis client that provides high-level constructs such as distributed locks, which can simplify handling concurrency.&amp;lt;/p&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;div class=&amp;quot;dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;overflow-y-auto p-4&amp;quot; dir=&amp;quot;ltr&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;!whitespace-pre hljs language-java&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;hljs-type&amp;quot;&amp;gt;RLock&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-variable&amp;quot;&amp;gt;lock&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-operator&amp;quot;&amp;gt;=&amp;lt;/span&amp;gt; redissonClient.getLock(&amp;lt;span class=&amp;quot;hljs-string&amp;quot;&amp;gt;&amp;quot;myLock&amp;quot;&amp;lt;/span&amp;gt;);&amp;lt;br&amp;gt;lock.lock();&amp;lt;br&amp;gt;&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;try&amp;lt;/span&amp;gt; {&amp;lt;br&amp;gt;  &amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;// critical section&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;} &amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;finally&amp;lt;/span&amp;gt; {&amp;lt;br&amp;gt;  lock.unlock();&amp;lt;br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;h3&amp;gt;6. &amp;lt;strong&amp;gt;SET with NX and EX Options&amp;lt;/strong&amp;gt;&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;The &amp;lt;code&amp;gt;SET&amp;lt;/code&amp;gt; command with &amp;lt;code&amp;gt;NX&amp;lt;/code&amp;gt; (only set if not exists) and &amp;lt;code&amp;gt;EX&amp;lt;/code&amp;gt; (expiration time) options can be used to implement simple locking.&amp;lt;/p&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;div class=&amp;quot;dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;overflow-y-auto p-4&amp;quot; dir=&amp;quot;ltr&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;!whitespace-pre hljs language-redis&amp;quot;&amp;gt;SET mylock unique_value NX EX 10&amp;lt;br&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;p&amp;gt;This command sets a key with a unique value if the key does not already exist, and sets an expiration time to ensure the lock is released if the client crashes.&amp;lt;/p&amp;gt;&amp;lt;h3&amp;gt;Best Practices&amp;lt;/h3&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Short-lived Locks&amp;lt;/strong&amp;gt;: Ensure that locks have a short expiration time to prevent deadlocks.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Error Handling&amp;lt;/strong&amp;gt;: Implement robust error handling and retries for failed transactions.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Monitoring&amp;lt;/strong&amp;gt;: Monitor your Redis instances for performance and potential issues related to concurrency.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;By using these strategies, you can effectively manage concurrency in Redis and ensure data consistency and integrity in your applications.&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;10&quot; y=&quot;1230&quot; width=&quot;950&quot; height=&quot;1440&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-22&quot; value=&quot;Rules&quot; style=&quot;shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;610&quot; y=&quot;730&quot; width=&quot;60&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-23&quot; value=&quot;Rules can be store i disk or any DB&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;680&quot; y=&quot;760&quot; width=&quot;270&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-24&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.267;entryY=1.019;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;hCzg1qKYabfS8IIPQ2bj-14&quot; target=&quot;hCzg1qKYabfS8IIPQ2bj-22&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;460&quot; y=&quot;880&quot; /&gt;&#10;              &lt;mxPoint x=&quot;626&quot; y=&quot;880&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-25&quot; value=&quot;cache rules to avoid fetch it from disk/db everytime&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;hCzg1qKYabfS8IIPQ2bj-24&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.2114&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint y=&quot;1&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;hCzg1qKYabfS8IIPQ2bj-26&quot; value=&quot;&amp;lt;h3 style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, &amp;amp;quot;system-ui&amp;amp;quot;, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 10px; color: rgb(40, 40, 40); font-size: 26px; line-height: 37px; text-align: start;&amp;quot;&amp;gt;Algorithms for rate limiting&amp;lt;/h3&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, &amp;amp;quot;system-ui&amp;amp;quot;, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 10px; line-height: 26px; font-size: 15px; text-align: justify; color: rgb(33, 37, 41);&amp;quot;&amp;gt;Rate limiting can be implemented using different algorithms, and each of them has distinct pros and cons. Even though this chapter does not focus on algorithms, understanding them at high-level helps to choose the right algorithm or combination of algorithms to fit our use cases. Here is a list of popular algorithms:&amp;lt;/p&amp;gt;&amp;lt;ul style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, &amp;amp;quot;system-ui&amp;amp;quot;, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin: 0px 0px 16px 28px; list-style-position: initial; list-style-image: initial; padding: 0px; color: rgb(33, 37, 41); font-size: 14px; text-align: start;&amp;quot;&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Token bucket&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Leaking bucket&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Fixed window counter&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Sliding window log&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; list-style: disc; margin: 0px; padding: 0px;&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &amp;amp;quot;Segoe UI&amp;amp;quot;, &amp;amp;quot;PingFang SC&amp;amp;quot;, &amp;amp;quot;Hiragino Sans GB&amp;amp;quot;, &amp;amp;quot;Microsoft YaHei&amp;amp;quot;, &amp;amp;quot;Helvetica Neue&amp;amp;quot;, Helvetica, Arial, sans-serif, &amp;amp;quot;Apple Color Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Emoji&amp;amp;quot;, &amp;amp;quot;Segoe UI Symbol&amp;amp;quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;&amp;quot;&amp;gt;Sliding window counter&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;50&quot; y=&quot;2710&quot; width=&quot;660&quot; height=&quot;360&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;" resource="https://app.diagrams.net/#Hm0v006c%2FHLD%2Fmain%2FRate%20Limiter.drawio.svg#%7B%22pageId%22%3A%22gAbEhMCksTMWc2DahYPJ%22%7D"><defs/><g><g><rect x="20" y="0" width="860" height="350" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 858px; height: 1px; padding-top: 175px; margin-left: 21px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 10px; line-height: 26px; font-size: 15px; text-align: justify; color: rgb(33, 37, 41);"><span style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-weight: bolder;">Requirements</span></p><p style="box-sizing: border-box; outline: none; font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 10px; line-height: 26px; font-size: 15px; text-align: justify; color: rgb(33, 37, 41);">Here is a summary of the requirements for the system:</p><ul style="box-sizing: border-box; outline: none; font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin: 0px 0px 16px 28px; list-style-position: initial; list-style-image: initial; padding: 0px; color: rgb(33, 37, 41); font-size: 14px; text-align: start;"><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Accurately limit excessive requests.</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Low latency. The rate limiter should not slow down HTTP response time.</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Use as little memory as possible.</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Distributed rate limiting. The rate limiter can be shared across multiple servers or processes.</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Exception handling. Show clear exceptions to users when their requests are throttled.</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">High fault tolerance. If there are any problems with the rate limiter (for example, a cache server goes offline), it does not affect the entire system.</p></li></ul></div></div></div></foreignObject><text x="450" y="179" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Requirements...</text></switch></g></g><g><path d="M 220 535 L 363.63 535" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 368.88 535 L 361.88 538.5 L 363.63 535 L 361.88 531.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="100" y="505" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 535px; margin-left: 101px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Client</div></div></div></foreignObject><text x="160" y="539" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Client</text></switch></g></g><g><path d="M 490 535 L 613.63 535" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 618.88 535 L 611.88 538.5 L 613.63 535 L 611.88 531.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="370" y="505" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 535px; margin-left: 371px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Rate Limiter</div></div></div></foreignObject><text x="430" y="539" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Rate Limiter</text></switch></g></g><g><rect x="620" y="505" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 535px; margin-left: 621px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Server</div></div></div></foreignObject><text x="680" y="539" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Server</text></switch></g></g><g><rect x="240" y="330" width="420" height="150" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 418px; height: 1px; padding-top: 405px; margin-left: 241px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">1. Basic High level rate limiter is a service in the middle of client and server communication. We can use in-memory map to control request limit.<div><br /></div><div>As it is in-memory model so it is cannot provide consistency(data lose when service goes down) and scalability (request is stored in-memory so can't be scale)</div></div></div></div></foreignObject><text x="450" y="409" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">1. Basic High level rate limiter is a service in the middle of client...</text></switch></g></g><g><path d="M 240 970 L 383.63 970" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 388.88 970 L 381.88 973.5 L 383.63 970 L 381.88 966.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="120" y="940" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 970px; margin-left: 121px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Client</div></div></div></foreignObject><text x="180" y="974" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Client</text></switch></g></g><g><path d="M 510 970 L 633.63 970" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 638.88 970 L 631.88 973.5 L 633.63 970 L 631.88 966.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="390" y="940" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 970px; margin-left: 391px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Rate Limiter</div></div></div></foreignObject><text x="450" y="974" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Rate Limiter</text></switch></g></g><g><rect x="640" y="940" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 970px; margin-left: 641px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Server</div></div></div></foreignObject><text x="700" y="974" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Server</text></switch></g></g><g><rect x="60" y="640" width="420" height="150" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 418px; height: 1px; padding-top: 715px; margin-left: 61px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">2. Instead in-memory, we can use distributed redis in-memory support which provides high availability also through replication in multiple nodes.<div>This model suffice all given requirement.</div></div></div></div></foreignObject><text x="270" y="719" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">2. Instead in-memory, we can use distributed redis in-memory support w...</text></switch></g></g><g><path d="M 420 1110 C 420 1101.72 433.43 1095 450 1095 C 457.96 1095 465.59 1096.58 471.21 1099.39 C 476.84 1102.21 480 1106.02 480 1110 L 480 1160 C 480 1168.28 466.57 1175 450 1175 C 433.43 1175 420 1168.28 420 1160 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 480 1110 C 480 1118.28 466.57 1125 450 1125 C 433.43 1125 420 1118.28 420 1110" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 1148px; margin-left: 421px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Redis</div></div></div></foreignObject><text x="450" y="1151" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Redis</text></switch></g></g><g><path d="M 450 1000 L 450 1075 L 457 1075 L 457.01 1088.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 457.02 1093.88 L 453.51 1086.89 L 457.01 1088.63 L 460.51 1086.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><rect x="0" y="1210" width="950" height="1440" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 948px; height: 1px; padding-top: 1217px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>Major concern arise how concurrent request will be handled in redis.</div><div>Redis provide feature of transaction. There are several ways we can acheive atomicity in redis.<br /><br /><br /><h3>1. <strong>Using Transactions</strong></h3><p>Redis transactions allow you to execute a series of commands atomically using the <code>MULTI</code>, <code>EXEC</code>, and <code>WATCH</code> commands.</p><ul><li><p><strong>MULTI/EXEC</strong>: These commands mark the start and end of a transaction block. All commands between <code>MULTI</code> and <code>EXEC</code> are queued and executed atomically.</p><pre><div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><div class="flex items-center"><br /></div></div><div dir="ltr" class="overflow-y-auto p-4"><code class="!whitespace-pre hljs language-redis">MULTI<br />SET key1 value1<br />SET key2 value2<br />EXEC<br /></code></div></div></pre></li><li><p><strong>WATCH</strong>: This command is used to monitor one or more keys. If any of the watched keys are modified before the transaction is executed, the transaction is aborted.</p><pre><div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><div class="flex items-center"><br /></div></div><div dir="ltr" class="overflow-y-auto p-4"><code class="!whitespace-pre hljs language-redis">WATCH key1 key2<br />MULTI<br />SET key1 newValue1<br />SET key2 newValue2<br />EXEC<br />UNWATCH<br /></code></div></div></pre></li></ul><h3>2. <strong>Using Lua Scripts</strong></h3><p>Lua scripts in Redis are executed atomically, which ensures that no other commands are executed while the script is running. This can be particularly useful for complex operations.</p><pre><div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><div class="flex items-center"><br /></div></div><div dir="ltr" class="overflow-y-auto p-4"><code class="!whitespace-pre hljs language-lua"><span class="hljs-keyword">local</span> current = redis.call(<span class="hljs-string">"GET"</span>, KEYS[<span class="hljs-number">1</span>])<br /><span class="hljs-keyword">if</span> current == ARGV[<span class="hljs-number">1</span>] <span class="hljs-keyword">then</span><br />  <span class="hljs-keyword">return</span> redis.call(<span class="hljs-string">"SET"</span>, KEYS[<span class="hljs-number">1</span>], ARGV[<span class="hljs-number">2</span>])<br /><span class="hljs-keyword">else</span><br />  <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br /><span class="hljs-keyword">end</span><br /></code></div></div></pre><p>You can execute this script using the <code>EVAL</code> command:</p><pre><div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><div class="flex items-center"><br /></div></div><div dir="ltr" class="overflow-y-auto p-4"><code class="!whitespace-pre hljs language-redis">EVAL "local current = redis.call('GET', KEYS[1]); if current == ARGV[1] then return redis.call('SET', KEYS[1], ARGV[2]) else return nil end" 1 key currentValue newValue<br /></code></div></div></pre><h3>3. <strong>Optimistic Locking</strong></h3><p>Optimistic locking involves checking the value of a key before modifying it, ensuring that it has not been changed by another client since it was last read. This can be implemented using <code>WATCH</code>.</p><pre><div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div dir="ltr" class="overflow-y-auto p-4"><code class="!whitespace-pre hljs language-redis">WATCH key<br />local value = redis.call("GET", "key")<br />if value == "expected_value" then<br />  MULTI<br />  SET key new_value<br />  EXEC<br />else<br />  UNWATCH<br />end<br /></code></div></div></pre><h3>4. <strong>Redlock Algorithm</strong></h3><p>For distributed systems where Redis is used across multiple instances, the Redlock algorithm ensures distributed locking. This algorithm attempts to acquire locks on multiple Redis instances to achieve consensus.</p><p>Here is a simplified version of the Redlock algorithm:</p><ol><li>Attempt to acquire the lock on a majority of Redis instances.</li><li>Set a short expiration time to prevent deadlocks.</li><li>Release the lock when the task is completed.</li></ol><h3>5. <strong>Using Redisson</strong></h3><p>Redisson is a Java-based Redis client that provides high-level constructs such as distributed locks, which can simplify handling concurrency.</p><pre><div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><br /></div><div dir="ltr" class="overflow-y-auto p-4"><code class="!whitespace-pre hljs language-java"><span class="hljs-type">RLock</span> <span class="hljs-variable">lock</span> <span class="hljs-operator">=</span> redissonClient.getLock(<span class="hljs-string">"myLock"</span>);<br />lock.lock();<br /><span class="hljs-keyword">try</span> {<br />  <span class="hljs-comment">// critical section</span><br />} <span class="hljs-keyword">finally</span> {<br />  lock.unlock();<br />}<br /></code></div></div></pre><h3>6. <strong>SET with NX and EX Options</strong></h3><p>The <code>SET</code> command with <code>NX</code> (only set if not exists) and <code>EX</code> (expiration time) options can be used to implement simple locking.</p><pre><div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><br /></div><div dir="ltr" class="overflow-y-auto p-4"><code class="!whitespace-pre hljs language-redis">SET mylock unique_value NX EX 10<br /></code></div></div></pre><p>This command sets a key with a unique value if the key does not already exist, and sets an expiration time to ensure the lock is released if the client crashes.</p><h3>Best Practices</h3><ul><li><strong>Short-lived Locks</strong>: Ensure that locks have a short expiration time to prevent deadlocks.</li><li><strong>Error Handling</strong>: Implement robust error handling and retries for failed transactions.</li><li><strong>Monitoring</strong>: Monitor your Redis instances for performance and potential issues related to concurrency.</li></ul><p>By using these strategies, you can effectively manage concurrency in Redis and ensure data consistency and integrity in your applications.</p></div></div></div></div></foreignObject><text x="2" y="1229" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Major concern arise how concurrent request will be handled in redis....</text></switch></g></g><g><path d="M 600 725 C 600 716.72 613.43 710 630 710 C 637.96 710 645.59 711.58 651.21 714.39 C 656.84 717.21 660 721.02 660 725 L 660 775 C 660 783.28 646.57 790 630 790 C 613.43 790 600 783.28 600 775 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 660 725 C 660 733.28 646.57 740 630 740 C 613.43 740 600 733.28 600 725" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 763px; margin-left: 601px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Rules</div></div></div></foreignObject><text x="630" y="766" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Rules</text></switch></g></g><g><rect x="670" y="740" width="270" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 268px; height: 1px; padding-top: 755px; margin-left: 671px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Rules can be store i disk or any DB</div></div></div></foreignObject><text x="805" y="759" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Rules can be store i disk or any DB</text></switch></g></g><g><path d="M 450 940 L 450 860 L 616 860 L 616.02 797.89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 616.02 792.64 L 619.52 799.64 L 616.02 797.89 L 612.52 799.64 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 862px; margin-left: 495px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">cache rules to avoid fetch it from disk/db everytime</div></div></div></foreignObject><text x="495" y="865" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">cache rules to avoid fetch it from disk/db everytime</text></switch></g></g><g><rect x="40" y="2690" width="660" height="360" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 658px; height: 1px; padding-top: 2870px; margin-left: 41px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h3 style="box-sizing: border-box; outline: none; font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 10px; color: rgb(40, 40, 40); font-size: 26px; line-height: 37px; text-align: start;">Algorithms for rate limiting</h3><p style="box-sizing: border-box; outline: none; font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 10px; line-height: 26px; font-size: 15px; text-align: justify; color: rgb(33, 37, 41);">Rate limiting can be implemented using different algorithms, and each of them has distinct pros and cons. Even though this chapter does not focus on algorithms, understanding them at high-level helps to choose the right algorithm or combination of algorithms to fit our use cases. Here is a list of popular algorithms:</p><ul style="box-sizing: border-box; outline: none; font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin: 0px 0px 16px 28px; list-style-position: initial; list-style-image: initial; padding: 0px; color: rgb(33, 37, 41); font-size: 14px; text-align: start;"><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Token bucket</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Leaking bucket</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Fixed window counter</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Sliding window log</p></li><li style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; list-style: disc; margin: 0px; padding: 0px;"><p style="box-sizing: border-box; outline: none; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; margin-top: 0px; margin-bottom: 4px; line-height: 26px; font-size: 15px; text-align: justify;">Sliding window counter</p></li></ul></div></div></div></foreignObject><text x="370" y="2874" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Algorithms for rate limiting...</text></switch></g></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>